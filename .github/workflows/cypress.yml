name: E2E on Chrome
on: [push]
jobs:
  cypress-run:
    runs-on: ubuntu-20.04
    # let's make sure our tests pass on Chrome browser
    name: E2E on Chrome
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup npm package
        run: |
          # npm i -g npx
          npm install
          # npx cypress verify
          # npx cypress info
          # npx cypress --version

      - name: Run tests 
        run: npx cypress run --browser chrome --spec cypress/e2e/automationPractice/tests/**.js

      - name: Uploading artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-execution-report
          path: cypress/reports/html
          retention-days: 30
          
      - name: Telegram notification about successful build
        run: |
          RUN_ID=${{ github.run_id }}
          URL="https://github.com/jaminko/cypress-automation/actions/runs/$RUN_ID"
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendPhoto" \
          -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -F photo=@build_success.png \
          -F caption="
          ✔️GIT: Build number ${{ github.run_number }} 
          SUCCESS 😁
          🌳BRANCH: ${{ github.ref }}
          📂REPO: ${{ github.repository }}
          👑OWNER: ${{ github.repository_owner }}
          🌐URL: $URL
          📝COMMIT MESSAGE: ${{ github.event.head_commit.message }}🚀"
        if: success()

      - name: Telegram notification about failed build
        run: |
          RUN_ID=${{ github.run_id }}
          URL="https://github.com/jaminko/cypress-automation/actions/runs/$RUN_ID"
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendPhoto" \
          -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -F photo=@build_failed.png \
          -F caption="
          ❌GIT: Build number ${{ github.run_number }}
          FAILED 😭
          🌳BRANCH: ${{ github.ref }}
          📂REPO: ${{ github.repository }}
          👑OWNER: ${{ github.repository_owner }}
          🌐URL: $URL
          📝COMMIT MESSAGE: ${{ github.event.head_commit.message }}🚀"
        if: failure()  

      - name: Telegram notification with Cypress Reports
        run: |
          REPORT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/reports"
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -F text="New Cypress Mocha Reports are available! Check them out: ${REPORT_URL}"
        if: always()

      - name: Get Artifact Download URL
        id: get_artifact_url
        run: |
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER=${{ github.repository_owner }}
          REPO_NAME=${{ github.repository }}
          RUN_ID=${{ github.run_id }}
          ARTIFACT_NAME=cypress-execution-report

          DOWNLOAD_URL=$(curl -sL \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/runs/$RUN_ID/artifacts" | \
          jq -r --arg ARTIFACT_NAME "$ARTIFACT_NAME" '.artifacts[] | select(.name == $ARTIFACT_NAME) | .archive_download_url')

          echo "Artifact Download URL: $DOWNLOAD_URL"
          echo "$DOWNLOAD_URL" > artifact_download_url.txt
          shell: bash

      - name: Send Artifact Download URL to Telegram
        run: |
          TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
          DOWNLOAD_URL=$(cat artifact_download_url.txt)

          curl -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
          -F chat_id=$TELEGRAM_CHAT_ID \
          -F text="Cypress Mocha Reports are ready for download! [Download Here]($DOWNLOAD_URL)"
          shell: bash
